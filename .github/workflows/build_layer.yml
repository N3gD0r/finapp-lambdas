name: Build_layer

on:
  workflow_dispatch:
  push:
    branches:
      - feat-pulumi-lambdas
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: '**/requirements.txt'

      - name: Build entities layer
        run: |
          python -m pip install -r entities/requirements.txt
          python -m build entities

      - name: Build persistence layer
        run: |
          python -m pip install -r persistence/requirements.txt
          python -m build persistence

      - name: Build secrets layer
        run: |
          python -m pip install -r load_secrets/requirements.txt
          python -m build load_secrets

      - name: Build lambda layer
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install entities/dist/*.tar.gz
          python -m pip install persistence/dist/*.tar.gz
          python -m pip install load_secrets/dist/*.tar.gz
          cp -r venv/lib/python3.12/site-packages python
          rm -rf python/pip*
          zip -r python.zip python >/dev/null 2>&1

      - name: Setup aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create S3 bucket if it does not exist
        run: |
          aws s3 ls s3://${{ secrets.S3_BUCKET }} >/dev/null 2>&1 ||
          aws s3 mb s3://${{ secrets.S3_BUCKET }} --region ${{ secrets.AWS_REGION }} && \
          aws s3api put-bucket-versioning --bucket ${{ secrets.S3_BUCKET }} --versioning-configuration Status=Enabled

      - id: check_object_version
        name: Check for latest version
        run: |
          bucket=${{ secrets.S3_BUCKET }}
          latest_version=$(aws s3api list-object-versions --bucket "$bucket" --prefix 'python.zip' --query 'Versions[0].VersionId' 2>/dev/null)
          echo "S3_OBJECT_V=$latest_version" >> "$GITHUB_OUTPUT"

      - id: create_if_not_exists
        name: Upload layer if nothing exists
        if: ${{ steps.check_object_version.outputs.S3_OBJECT_V == 'None' }}
        run: |
          bucket=${{ secrets.S3_BUCKET }}
          echo "Destination object does not exist. Uploading new version..."
          aws s3api put-object --bucket "$bucket" --key 'python.zip' --body python.zip
          exit 0

      - id: get_obj_sum
        name: Get md5sum from dest bucket
        if: ${{ steps.check_object_version.outputs.S3_OBJECT_V != 'None' }}
        run: |
          bucket=${{ secrets.S3_BUCKET }}
          version_id=${{ steps.check_object_version.outputs.S3_OBJECT_V }}
          temp_file=$(mktemp)

          aws s3api get-object \
            --bucket "$bucket" \
            --key 'python.zip' \
            --version-id  "$version_id" \
            "$temp_file" >/dev/null 2>&1

          ls -lh "$temp_file" python.zip

          destination_md5=$(md5sum "$temp_file" | awk '{ print $1 }')
          rm "$temp_file"
          echo "REMOTE_OBJ=$destination_md5" >> "$GITHUB_OUTPUT"

      - id: compare_objects
        name: Compare local and remote md5sums
        if: ${{ steps.check_object_version.outputs.S3_OBJECT_V != 'None' }}
        run: |
          source_md5=$(md5sum python.zip | awk '{ print $1 }')
          destination_md5=${{ steps.get_obj_sum.outputs.REMOTE_OBJ }}

          echo "new_layer_md5: $source_md5"
          echo "remote_layer_md5: $destination_md5"

          if [ "$source_md5" == "$destination_md5" ]; then
            echo "CHANGED_OBJ=1" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "CHANGED_OBJ=0" >> "$GITHUB_OUTPUT"

      - id: upload
        name: Upload layer to bucket
        if: ${{ steps.compare_objects.outputs.CHANGED_OBJ == '1' }}
        run: |
          bucket=${{ secrets.S3_BUCKET }}
          aws s3api put-object --bucket "$bucket" --key 'python.zip' --body python.zip

      - id: no_changes
        name: No need to upload layer
        if: ${{ steps.compare_objects.outputs.CHANGED_OBJ == '0' }}
        run: |
          echo 'No changes in layer'
          exit 0

